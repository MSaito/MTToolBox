# scons construct file
# see http://www.scons.org/
#

#
# set LINUX environment variables
#
import sys,os
sys.path.append('../../')
import localSconsLib

include_path = localSconsLib.getOSIncPath()
library_path = localSconsLib.getOSLibPath()
include_path = localSconsLib.convIncPath(include_path)

#
# setting for this project
#
include_path.append('-I../../include')
include_path.append('-I.')
library_path.append('../../lib')
optlib = ['MTToolBox', 'ntl']
env = Environment(CFLAGS=['-Wall', '-O3', '-std=c99',
                          '-Wmissing-prototypes', '-Wextra'],
                  CXXFLAGS=['-Wall', '-g', '-O3', '-Wextra',
                            include_path,
                            '-D__STDC_CONSTANT_MACROS',
                            '-D__STDC_FORMAT_MACROS'])
env.Append(LIBPATH=library_path)

files = ['tinymt32dc.cpp',
         'parse_opt.cpp']

#
# Library check
#
conf = Configure(env)
if not conf.CheckLib('ntl'):
    print 'Did not find libntl.a or ntl.lib, exiting!'
    Exit(1)
if conf.CheckLib('gf2x'):
    optlib.append('gf2x')
else:
    print env.get('LIBPATH')
    print 'gf2x not found.'
    Exit(1)
if conf.CheckLib('gmp'):
    optlib.append('gmp')
env = conf.Finish()

#
# target build
#
env.Program('tinymt32dc', files, LIBS=optlib)

Clean('all', Glob('*.o'))
